/**
 * Created by ITHILLEL5 on 09.11.2015.
 */
public class TestArray {
    private static java.util.Scanner input;
    public static void main(String[] args) {


       input = new java.util.Scanner(System.in);
     System.out.println("Enter position of fibonacci number");
       int position = input.nextInt();
    //   System.out.println("fibnumber");
     // FibNumber(position);
        System.out.println(calculateFib(position));
     //  System.out.println(sum(15000 ));
    }public static long[] cache = new long[51];
            private static void FibNumber(long position) {
                int fibnum1 = 1;
                int fibnum2 = 1;
                int i = 2;
                int fibnum=0;
                while(i<position){
                    fibnum  = fibnum1 + fibnum2;
                    fibnum1=fibnum2;
                    fibnum2=fibnum;
                    i++;

                }System.out.println(fibnum);
            }
            public static long sum(long peek){
                long sum = 0;
                while (peek>0){
          sum += peek;
            peek--;
        } return sum;

    }
            public static long calculateFib(int num){
if (cache[num]!=0 ){

    return cache[num];
} else if(num == 0 || num == 1){
       cache[num]=1;
        return 1;
    }else {
        long res = calculateFib(num-2)+calculateFib(num-1);
    cache[num]=res;
    return res;

    }

}

        }


